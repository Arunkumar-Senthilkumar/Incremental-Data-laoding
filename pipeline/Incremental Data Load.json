{
	"name": "Incremental Data Load",
	"properties": {
		"activities": [
			{
				"name": "Lookup1",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT LastProcessedTimestamp FROM ControlTable WHERE TableName = 'SalesData';",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_ControlTable",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Copy data1",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Lookup1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT * FROM SalesData WHERE ModifiedDate > '@{activity('Lookup1').output.firstRow.LastProcessedTimestamp}';",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "upsert",
						"upsertSettings": {
							"useTempDB": true,
							"keys": [
								"SalesID"
							]
						},
						"sqlWriterUseTableLock": false,
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "SalesID",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "SalesID",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "CustomerID",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "CustomerID",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "ProductName",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "ProductName",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "Quantity",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "Quantity",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "UnitPrice",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 2,
									"precision": 10
								},
								"sink": {
									"name": "UnitPrice",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 2,
									"precision": 10
								}
							},
							{
								"source": {
									"name": "SaleDate",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "SaleDate",
									"type": "DateTime",
									"physicalType": "datetime"
								}
							},
							{
								"source": {
									"name": "ModifiedDate",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "ModifiedDate",
									"type": "DateTime",
									"physicalType": "datetime"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ds_SalesData",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ds_AnalyticsSalesData",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Stored procedure1",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy data1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[UpdateLastProcessedTimestamp]"
				},
				"linkedServiceName": {
					"referenceName": "ls_bp5_sqldb",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "If Condition1",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Stored procedure1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@and(greaterOrEquals(formatDateTime(utcNow(), 'HH'), '18'), lessOrEquals(formatDateTime(utcNow(), 'HH'), '24'))",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Wait1",
							"type": "Wait",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"waitTimeInSeconds": 1
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Web1",
							"type": "WebActivity",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"method": "POST",
								"url": "https://hooks.slack.com/services/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",
								"body": {
									"text": "Incremental data load Pipeline execution succeeded!"
								}
							}
						}
					]
				}
			},
			{
				"name": "If Condition2",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Stored procedure1",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@and(greaterOrEquals(formatDateTime(utcNow(), 'HH'), '07'), lessOrEquals(formatDateTime(utcNow(), 'HH'), '09'))",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Wait2",
							"type": "Wait",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"waitTimeInSeconds": 1
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Web2",
							"type": "WebActivity",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"method": "POST",
								"url": "https://hooks.slack.com/services/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",
								"body": {
									"text": "Incremental data load Pipeline execution Failed!"
								}
							}
						}
					]
				}
			},
			{
				"name": "Copy data2",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "If Condition1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings",
							"copyBehavior": "PreserveHierarchy"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "SalesID",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "SalesID",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "CustomerID",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "CustomerID",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "ProductName",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "ProductName",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "Quantity",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "Quantity",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "UnitPrice",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 2,
									"precision": 10
								},
								"sink": {
									"name": "UnitPrice",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "TotalAmount",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 2,
									"precision": 21
								},
								"sink": {
									"name": "TotalAmount",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "SaleDate",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "SaleDate",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "ModifiedDate",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "ModifiedDate",
									"type": "String",
									"physicalType": "String"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ds_SalesData",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ds_AnalyticalSalesData",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Web3",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Copy data2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"method": "POST",
					"url": "https://hooks.slack.com/services/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",
					"body": {
						"text": "Data ingestion into ADLS completed successfully!"
					}
				}
			},
			{
				"name": "Web4",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Copy data2",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"method": "POST",
					"url": "https://hooks.slack.com/services/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",
					"body": {
						"text": "Data ingestion into ADLS failed!"
					}
				}
			}
		],
		"annotations": []
	}
}